package com.example.datn.BanHangTaiQuay.Service;

import com.example.datn.BanHangTaiQuay.DTO.ImeiBanHangTaiQuayDTO;
import com.example.datn.BanHangTaiQuay.Repo.IMEIBanHangTaiQuayRepository;

import com.example.datn.Model.IMEI;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.ArrayList;
import java.util.List;

@Service
public class ImeiBanHangTaiQuayService {

    @Autowired
    private IMEIBanHangTaiQuayRepository imeiRepo;

    // L·∫•y list IMEI theo m√£ SKU (c√≥ th·ªÉ filter theo IMEI) - H·ªó tr·ª£ c·∫£ s·∫£n ph·∫©m ch√≠nh v√† ph·ª• ki·ªán
    public List<ImeiBanHangTaiQuayDTO> getImeiListBySkuMaBT(String skuMaBT, String imei) {
        System.out.println("üîç Service: T√¨m IMEI cho SKU: " + skuMaBT + ", IMEI filter: " + imei);
        List<Object[]> results = new ArrayList<>();

        try {
            // ‚úÖ TH·ª¨ T√åM S·∫¢N PH·∫®M CH√çNH TR∆Ø·ªöC
            if (imei == null || imei.trim().isEmpty()) {
                System.out.println("üîç Service: G·ªçi findImeisBySkuMaBT v·ªõi SKU: " + skuMaBT);
                results = imeiRepo.findImeisBySkuMaBT(skuMaBT);
                System.out.println("üîç Service: K·∫øt qu·∫£ s·∫£n ph·∫©m ch√≠nh t·ª´ DB: " + (results != null ? results.size() : "null") + " records");
            } else {
                System.out.println("üîç Service: G·ªçi findImeisBySkuMaBTAndImei v·ªõi SKU: " + skuMaBT + ", IMEI: " + imei);
                results = imeiRepo.findImeisBySkuMaBTAndImei(skuMaBT, imei);
                System.out.println("üîç Service: K·∫øt qu·∫£ s·∫£n ph·∫©m ch√≠nh t·ª´ DB: " + (results != null ? results.size() : "null") + " records");
            }

            // ‚úÖ N·∫æU KH√îNG T√åM TH·∫§Y S·∫¢N PH·∫®M CH√çNH, TH·ª¨ T√åM PH·ª§ KI·ªÜN
            if (results.isEmpty()) {
                System.out.println("üîç Service: Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m ch√≠nh, th·ª≠ t√¨m ph·ª• ki·ªán...");
                if (imei == null || imei.trim().isEmpty()) {
                    results = imeiRepo.findImeisBySkuPhuKien(skuMaBT);
                    System.out.println("üîç Service: K·∫øt qu·∫£ ph·ª• ki·ªán t·ª´ DB: " + (results != null ? results.size() : "null") + " records");
                } else {
                    // T√¨m ph·ª• ki·ªán v·ªõi filter IMEI
                    System.out.println("üîç Service: T√¨m ph·ª• ki·ªán v·ªõi filter IMEI: " + imei);
                    results = imeiRepo.findImeisBySkuPhuKienAndImei(skuMaBT, imei);
                    System.out.println("üîç Service: K·∫øt qu·∫£ ph·ª• ki·ªán v·ªõi filter t·ª´ DB: " + (results != null ? results.size() : "null") + " records");
                }
            }
        } catch (Exception e) {
            System.err.println("‚ùå Service: L·ªói khi t√¨m IMEI: " + e.getMessage());
            results = new ArrayList<>();
        }

        List<ImeiBanHangTaiQuayDTO> dtos = results.stream().map(obj -> {
            ImeiBanHangTaiQuayDTO dto = new ImeiBanHangTaiQuayDTO();
            dto.setId((Integer) obj[0]);

            // ‚úÖ PH√ÇN BI·ªÜT S·∫¢N PH·∫®M CH√çNH V√Ä PH·ª§ KI·ªÜN
            String skuValue = (String) obj[1];
            if (skuValue.equals(skuMaBT)) {
                // N·∫øu SKU kh·ªõp v·ªõi input, c√≥ th·ªÉ l√† s·∫£n ph·∫©m ch√≠nh ho·∫∑c ph·ª• ki·ªán
                // C·∫ßn ki·ªÉm tra th√™m ƒë·ªÉ ph√¢n bi·ªát
                dto.setMaSKU(skuValue);
                dto.setMaSKUPhuKien(skuValue);
            } else {
                // Fallback
                dto.setMaSKU(skuValue);
                dto.setMaSKUPhuKien(skuValue);
            }

            dto.setImei((String) obj[2]);
            dto.setTrangThai((Integer) obj[3]);
            System.out.println("üîç Service: T·∫°o DTO - ID: " + dto.getId() + ", SKU: " + dto.getMaSKU() + ", IMEI: " + dto.getImei() + ", Status: " + dto.getTrangThai());
            return dto;
        }).toList();

        System.out.println("üîç Service: Tr·∫£ v·ªÅ " + dtos.size() + " IMEI DTOs");
        return dtos;
    }

    // T√¨m s·∫£n ph·∫©m theo IMEI ch√≠nh x√°c
    public ImeiBanHangTaiQuayDTO timSanPhamTheoImei(String imei) {
        System.out.println("üîç Service: timSanPhamTheoImei ƒë∆∞·ª£c g·ªçi v·ªõi IMEI: " + imei);
        List<ImeiBanHangTaiQuayDTO> results = getImeiByExactImei(imei);
        System.out.println("üîç Service: getImeiByExactImei tr·∫£ v·ªÅ " + (results != null ? results.size() : "null") + " results");

        if (results.isEmpty()) {
            System.out.println("‚ùå Service: Kh√¥ng t√¨m th·∫•y IMEI: " + imei);
            return null;
        }

        ImeiBanHangTaiQuayDTO dto = results.get(0);
        System.out.println("üîç Service: DTO - SKU: " + dto.getMaSKU() + ", IMEI: " + dto.getImei() + ", TenSP: " + dto.getTenSanPham());

        ImeiBanHangTaiQuayDTO response = new ImeiBanHangTaiQuayDTO();
        response.setImei(dto.getImei());
        response.setTrangThai(dto.getTrangThai());

        // ‚úÖ X·ª≠ l√Ω c·∫£ s·∫£n ph·∫©m ch√≠nh v√† ph·ª• ki·ªán
        if (dto.getMaSKU() != null) {
            // S·∫£n ph·∫©m ch√≠nh
            response.setMaSKU(dto.getMaSKU());
            response.setTenSanPham(dto.getTenSanPham());
            System.out.println("üîç Service: X·ª≠ l√Ω s·∫£n ph·∫©m ch√≠nh - SKU: " + dto.getMaSKU());
        } else if (dto.getMaSKUPhuKien() != null) {
            // Ph·ª• ki·ªán
            response.setMaSKUPhuKien(dto.getMaSKUPhuKien());
            response.setTenPhuKien(dto.getTenPhuKien());
            System.out.println("üîç Service: X·ª≠ l√Ω ph·ª• ki·ªán - SKU: " + dto.getMaSKUPhuKien());
        }

        // Set th√¥ng tin s·∫£n ph·∫©m/ph·ª• ki·ªán
        if (dto.getSanPham() != null) {
            response.setSanPham(dto.getSanPham());
            System.out.println("üîç Service: S·ª≠ d·ª•ng sanPham t·ª´ DTO");
        } else {
            // T·∫°o object s·∫£n ph·∫©m t·ª´ th√¥ng tin IMEI v·ªõi d·ªØ li·ªáu ƒë·∫ßy ƒë·ªß
            var sanPhamObject = new Object() {
                public String maSKU = dto.getMaSKU();
                public String maSKUPhuKien = dto.getMaSKUPhuKien();
                public String tenSanPham = dto.getTenSanPham();
                public String tenPhuKien = dto.getTenPhuKien();
                public java.math.BigDecimal gia = java.math.BigDecimal.ZERO;
                public String thuocTinh = "";
                public Integer soLuong = 1;
            };

            // ‚úÖ L·∫§Y TH√îNG TIN ƒê·∫¶Y ƒê·ª¶ T·ª™ DATABASE
            try {
                if (dto.getMaSKU() != null) {
                    // S·∫£n ph·∫©m ch√≠nh - l·∫•y th√¥ng tin t·ª´ BienTheSanPham
                    System.out.println("üîç Service: L·∫•y th√¥ng tin s·∫£n ph·∫©m ch√≠nh t·ª´ DB cho SKU: " + dto.getMaSKU());
                    // TODO: Implement logic to get full product info
                } else if (dto.getMaSKUPhuKien() != null) {
                    // Ph·ª• ki·ªán - l·∫•y th√¥ng tin t·ª´ BienThePhuKien
                    System.out.println("üîç Service: L·∫•y th√¥ng tin ph·ª• ki·ªán t·ª´ DB cho SKU: " + dto.getMaSKUPhuKien());
                    // TODO: Implement logic to get full accessory info
                }
            } catch (Exception e) {
                System.err.println("‚ùå Service: L·ªói khi l·∫•y th√¥ng tin ƒë·∫ßy ƒë·ªß: " + e.getMessage());
            }

            response.setSanPham(sanPhamObject);
            System.out.println("üîç Service: T·∫°o sanPham object t·ª´ DTO v·ªõi th√¥ng tin c∆° b·∫£n");
        }

        System.out.println("üîç Service: Tr·∫£ v·ªÅ ImeiResponseDTO v·ªõi IMEI: " + response.getImei());
        System.out.println("üîç Service: Chi ti·∫øt response - maSKU: " + response.getMaSKU() +
                ", maSKUPhuKien: " + response.getMaSKUPhuKien() +
                ", tenSanPham: " + response.getTenSanPham() +
                ", tenPhuKien: " + response.getTenPhuKien() +
                ", gia: " + (response.getSanPham() != null ? "c√≥ object" : "null"));
        return response;
    }

    // L·∫•y IMEI kh·∫£ d·ª•ng theo SKU
    public List<ImeiBanHangTaiQuayDTO> getImeiKhachDung(String maSKU) {
        System.out.println("üîç Service: getImeiKhachDung ƒë∆∞·ª£c g·ªçi v·ªõi SKU: " + maSKU);
        List<ImeiBanHangTaiQuayDTO> result = getImeiListBySkuMaBT(maSKU, null);
        System.out.println("üîç Service: getImeiKhachDung tr·∫£ v·ªÅ " + (result != null ? result.size() : "null") + " items");
        return result;
    }

    // T√¨m ki·∫øm IMEI ch√≠nh x√°c trong to√†n b·ªô h·ªá th·ªëng
    private List<ImeiBanHangTaiQuayDTO> getImeiByExactImei(String imei) {
        System.out.println("üîç Service: T√¨m ki·∫øm IMEI: " + imei);
        // T√¨m IMEI entity ƒë·ªÉ l·∫•y th√¥ng tin ƒë·∫ßy ƒë·ªß
        var imeiEntity = imeiRepo.findByImei(imei);
        if (imeiEntity.isEmpty()) {
            System.out.println("‚ùå Service: Kh√¥ng t√¨m th·∫•y IMEI: " + imei);
            return new ArrayList<>();
        }
        System.out.println("‚úÖ Service: T√¨m th·∫•y IMEI entity");

        IMEI imeiObj = imeiEntity.get();
        ImeiBanHangTaiQuayDTO dto = new ImeiBanHangTaiQuayDTO();
        dto.setImei(imeiObj.getImei());
        dto.setTrangThai(imeiObj.getTrangThai());

        // L·∫•y th√¥ng tin s·∫£n ph·∫©m/ph·ª• ki·ªán - x·ª≠ l√Ω lazy loading
        try {
            if (imeiObj.getBienTheSanPham() != null) {
                // ‚úÖ X·ª≠ l√Ω s·∫£n ph·∫©m ch√≠nh
                var bienThe = imeiObj.getBienTheSanPham();
                var sanPham = bienThe.getSanPham();

                dto.setMaSKU(bienThe.getMaSKU());
                dto.setTenSanPham(sanPham.getTenSanPham());

                // T·∫°o object s·∫£n ph·∫©m ƒë·∫ßy ƒë·ªß
                final String thuocTinhString;
                if (bienThe.getThuocTinhList() != null && !bienThe.getThuocTinhList().isEmpty()) {
                    thuocTinhString = bienThe.getThuocTinhList().stream()
                            .map(tt -> tt.getTenThuocTinh() + ": " + tt.getTenThuocTinhBienThe())
                            .collect(java.util.stream.Collectors.joining(", "));
                } else {
                    thuocTinhString = "";
                }

                var sanPhamDTO = new Object() {
                    public String maSKU = bienThe.getMaSKU();
                    public String tenSanPham = sanPham.getTenSanPham();
                    public java.math.BigDecimal gia = bienThe.getGia();
                    public String thuocTinh = thuocTinhString;
                    public Integer soLuong = 1;
                };

                dto.setSanPham(sanPhamDTO);
                System.out.println("‚úÖ Service: X·ª≠ l√Ω s·∫£n ph·∫©m ch√≠nh - SKU: " + bienThe.getMaSKU());
                System.out.println("üîç Service: Chi ti·∫øt s·∫£n ph·∫©m - Gia: " + bienThe.getGia() + ", ThuocTinh: " + thuocTinhString);
            } else if (imeiObj.getBienThePhuKien() != null) {
                // ‚úÖ X·ª≠ l√Ω ph·ª• ki·ªán
                var bienThePhuKien = imeiObj.getBienThePhuKien();
                var phuKien = bienThePhuKien.getPhuKien();

                dto.setMaSKUPhuKien(bienThePhuKien.getMaSKUPhuKien());
                dto.setTenPhuKien(phuKien.getTenPhuKien());

                // T·∫°o object ph·ª• ki·ªán ƒë·∫ßy ƒë·ªß
                final String thuocTinhString;
                if (bienThePhuKien.getThuocTinhPhuKienList() != null && !bienThePhuKien.getThuocTinhPhuKienList().isEmpty()) {
                    thuocTinhString = bienThePhuKien.getThuocTinhPhuKienList().stream()
                            .map(tt -> tt.getTenThuocTinh() + ": " + tt.getGiaTriThuocTinh())
                            .collect(java.util.stream.Collectors.joining(", "));
                } else {
                    thuocTinhString = "";
                }

                var phuKienDTO = new Object() {
                    public String maSKU = null; // S·∫£n ph·∫©m ch√≠nh = null
                    public String maSKUPhuKien = bienThePhuKien.getMaSKUPhuKien();
                    public String tenSanPham = null; // S·∫£n ph·∫©m ch√≠nh = null
                    public String tenPhuKien = phuKien.getTenPhuKien();
                    public java.math.BigDecimal gia = bienThePhuKien.getGia();
                    public String thuocTinh = thuocTinhString;
                    public Integer soLuong = 1;
                };

                dto.setSanPham(phuKienDTO);
                System.out.println("‚úÖ Service: X·ª≠ l√Ω ph·ª• ki·ªán - SKU: " + bienThePhuKien.getMaSKUPhuKien());
            } else {
                // X·ª≠ l√Ω tr∆∞·ªùng h·ª£p kh√¥ng c√≥ s·∫£n ph·∫©m/ph·ª• ki·ªán
                dto.setMaSKU("UNKNOWN");
                dto.setTenSanPham("S·∫£n ph·∫©m kh√¥ng x√°c ƒë·ªãnh");

                var sanPhamDTO = new Object() {
                    public String maSKU = "UNKNOWN";
                    public String tenSanPham = "S·∫£n ph·∫©m kh√¥ng x√°c ƒë·ªãnh";
                    public java.math.BigDecimal gia = java.math.BigDecimal.ZERO;
                    public String thuocTinh = "";
                    public Integer soLuong = 0;
                };

                dto.setSanPham(sanPhamDTO);
                System.out.println("‚ùå Service: Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m/ph·ª• ki·ªán cho IMEI");
            }
        } catch (Exception e) {
            // X·ª≠ l√Ω l·ªói lazy loading
            System.err.println("L·ªói khi load relationship: " + e.getMessage());
            dto.setMaSKU("ERROR");
            dto.setTenSanPham("L·ªói khi t·∫£i th√¥ng tin s·∫£n ph·∫©m");
        }

        return List.of(dto);
    }

    // Lookup IMEI theo SKU (h·ªó tr·ª£ c·∫£ s·∫£n ph·∫©m v√† ph·ª• ki·ªán)
    public List<ImeiBanHangTaiQuayDTO> lookupImeisBySku(String sku) {
        System.out.println("üîç Service: lookupImeisBySku ƒë∆∞·ª£c g·ªçi v·ªõi SKU: " + sku);

        try {
            // T√¨m IMEI theo SKU s·∫£n ph·∫©m ch√≠nh
            List<ImeiBanHangTaiQuayDTO> sanPhamImeis = getImeiListBySkuMaBT(sku, null);
            System.out.println("üîç Service: T√¨m th·∫•y " + sanPhamImeis.size() + " IMEI cho s·∫£n ph·∫©m ch√≠nh");

            if (!sanPhamImeis.isEmpty()) {
                return sanPhamImeis;
            }

            // N·∫øu kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m ch√≠nh, t√¨m ph·ª• ki·ªán
            System.out.println("üîç Service: Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m ch√≠nh, t√¨m ki·∫øm ph·ª• ki·ªán");

            // T√¨m IMEI theo SKU ph·ª• ki·ªán
            List<Object[]> phuKienResults = imeiRepo.findImeisBySkuPhuKien(sku);
            System.out.println("üîç Service: T√¨m th·∫•y " + (phuKienResults != null ? phuKienResults.size() : "null") + " IMEI cho ph·ª• ki·ªán");

            if (phuKienResults != null && !phuKienResults.isEmpty()) {
                List<ImeiBanHangTaiQuayDTO> phuKienImeis = phuKienResults.stream().map(obj -> {
                    ImeiBanHangTaiQuayDTO dto = new ImeiBanHangTaiQuayDTO();
                    dto.setId((Integer) obj[0]); // ‚úÖ S·ª¨A: obj[0] l√† id
                    dto.setMaSKUPhuKien((String) obj[1]); // ‚úÖ S·ª¨A: obj[1] l√† maSKUPhuKien
                    dto.setImei((String) obj[2]); // ‚úÖ S·ª¨A: obj[2] l√† imei
                    dto.setTrangThai((Integer) obj[3]); // ‚úÖ S·ª¨A: obj[3] l√† trangThai
                    System.out.println("üîç Service: T·∫°o DTO ph·ª• ki·ªán - ID: " + dto.getId() + ", SKU: " + dto.getMaSKUPhuKien() + ", IMEI: " + dto.getImei() + ", Status: " + dto.getTrangThai());
                    return dto;
                }).toList();

                System.out.println("‚úÖ Service: Tr·∫£ v·ªÅ " + phuKienImeis.size() + " IMEI ph·ª• ki·ªán");
                return phuKienImeis;
            }

            System.out.println("‚ùå Service: Kh√¥ng t√¨m th·∫•y IMEI cho SKU: " + sku);
            return new ArrayList<>();

        } catch (Exception e) {
            System.err.println("‚ùå Service: L·ªói trong lookupImeisBySku: " + e.getMessage());
            e.printStackTrace();
            return new ArrayList<>();
        }
    }

    // ===== OPTIMIZED BATCH UPDATE METHODS =====

    // C·∫≠p nh·∫≠t tr·∫°ng th√°i m·ªôt IMEI (t·ªëi ∆∞u h√≥a)
    @Transactional
    public boolean capNhatTrangThaiImei(String imei, int status) {
        System.out.println("üîÑ Service: C·∫≠p nh·∫≠t tr·∫°ng th√°i IMEI " + imei + " ‚Üí " + status);
        try {
            int updated = imeiRepo.capNhatTrangThaiMotImei(imei, status);
            if (updated > 0) {
                System.out.println("‚úÖ Service: ƒê√£ c·∫≠p nh·∫≠t IMEI " + imei + " ‚Üí tr·∫°ng th√°i " + status);
                return true;
            } else {
                System.out.println("‚ùå Service: Kh√¥ng t√¨m th·∫•y IMEI: " + imei);
                return false;
            }
        } catch (Exception e) {
            System.err.println("‚ùå Service: L·ªói c·∫≠p nh·∫≠t tr·∫°ng th√°i IMEI: " + e.getMessage());
            e.printStackTrace();
            return false;
        }
    }

    // C·∫≠p nh·∫≠t tr·∫°ng th√°i nhi·ªÅu IMEI c√πng l√∫c (t·ªëi ∆∞u h√≥a)
    @Transactional
    public boolean capNhatTrangThaiNhieuImei(List<String> imeiList, int status) {
        System.out.println("üîÑ Service: C·∫≠p nh·∫≠t tr·∫°ng th√°i " + imeiList.size() + " IMEI ‚Üí " + status);
        try {
            int updated = imeiRepo.capNhatTrangThaiNhieuImei(imeiList, status);
            System.out.println("‚úÖ Service: ƒê√£ c·∫≠p nh·∫≠t " + updated + "/" + imeiList.size() + " IMEI ‚Üí tr·∫°ng th√°i " + status);
            return updated > 0;
        } catch (Exception e) {
            System.err.println("‚ùå Service: L·ªói c·∫≠p nh·∫≠t tr·∫°ng th√°i IMEI h√†ng lo·∫°t: " + e.getMessage());
            e.printStackTrace();
            return false;
        }
    }

    // ===== LEGACY METHODS (Backward Compatibility) =====

    // C·∫≠p nh·∫≠t tr·∫°ng th√°i IMEI th√†nh 5 (ƒë√£ th√™m v√†o gi·ªè h√†ng)
    @Transactional
    public boolean capNhatTrangThaiImeiThanh5(String imei) {
        return capNhatTrangThaiImei(imei, 5);
    }

    // C·∫≠p nh·∫≠t tr·∫°ng th√°i nhi·ªÅu IMEI th√†nh 5
    @Transactional
    public boolean capNhatTrangThaiNhieuImeiThanh5(List<String> imeiList) {
        return capNhatTrangThaiNhieuImei(imeiList, 5);
    }

    // C·∫≠p nh·∫≠t tr·∫°ng th√°i IMEI v·ªÅ 1 (tr·∫°ng th√°i ban ƒë·∫ßu)
    @Transactional
    public boolean capNhatTrangThaiImeiVe1(String imei) {
        return capNhatTrangThaiImei(imei, 1);
    }

    // C·∫≠p nh·∫≠t tr·∫°ng th√°i nhi·ªÅu IMEI v·ªÅ 1
    @Transactional
    public boolean capNhatTrangThaiNhieuImeiVe1(List<String> imeiList) {
        return capNhatTrangThaiNhieuImei(imeiList, 1);
    }
}