package com.example.datn.BanHangTaiQuay.Service;

import com.example.datn.BanHangTaiQuay.DTO.PhuKienBanHangTaiQuayDTO;
import com.example.datn.BanHangTaiQuay.DTO.SanPhamBanHangTaiQuayDTO;
import com.example.datn.BanHangTaiQuay.Repo.BienThePhuKienBanHangTaiQuayRepository;
import com.example.datn.BanHangTaiQuay.Repo.BienTheSanPhamBanHangTaiQuayRepository;
import com.example.datn.BanHangTaiQuay.Repo.IMEIBanHangTaiQuayRepository;

import com.example.datn.Model.BienThePhuKien;
import com.example.datn.Model.BienTheSanPham;
import com.example.datn.Model.IMEI;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

@Service
public class SanPhamBanHangTaiQuayService {

    @Autowired
    private BienTheSanPhamBanHangTaiQuayRepository bienTheSanPhamRepo;

    @Autowired
    private BienThePhuKienBanHangTaiQuayRepository bienThePhuKienRepo;

    @Autowired
    private IMEIBanHangTaiQuayRepository imeiRepo;

    // L·∫•y t·∫•t c·∫£ s·∫£n ph·∫©m
    public List<SanPhamBanHangTaiQuayDTO> getSanPhamChonList() {
        List<BienTheSanPham> bienTheList = bienTheSanPhamRepo.findAllWithThuocTinh();
        return bienTheList.stream().map(this::convertToDTO).toList();
    }

    // T√¨m ki·∫øm c·∫£ s·∫£n ph·∫©m v√† ph·ª• ki·ªán theo maSKU
    public List<Object> timKiemSanPhamVaPhuKien(String keyword) {
        List<Object> result = new ArrayList<>();

        System.out.println("üîç Service: T√¨m ki·∫øm s·∫£n ph·∫©m v√† ph·ª• ki·ªán v·ªõi keyword: " + keyword);

        // 1. T√¨m s·∫£n ph·∫©m ch√≠nh (ch·ª©a keyword)
        List<BienTheSanPham> sanPhamList = bienTheSanPhamRepo.findByMaSKUContainingIgnoreCaseWithThuocTinh(keyword);
        System.out.println("üîç Service: T√¨m th·∫•y " + sanPhamList.size() + " s·∫£n ph·∫©m ch√≠nh (ch·ª©a keyword)");

        for (BienTheSanPham sanPham : sanPhamList) {
            SanPhamBanHangTaiQuayDTO dto = convertToDTO(sanPham);
            if (dto != null) {
                result.add(dto);
                System.out.println("‚úÖ Service: ƒê√£ th√™m s·∫£n ph·∫©m ch√≠nh: " + dto.getMaSKU());
            }
        }

        // 2. T√¨m ph·ª• ki·ªán (ch·ª©a keyword)
        List<BienThePhuKien> phuKienList = bienThePhuKienRepo.findByMaSKUPhuKienContainingIgnoreCaseWithThuocTinh(keyword);
        System.out.println("üîç Service: T√¨m th·∫•y " + phuKienList.size() + " ph·ª• ki·ªán (ch·ª©a keyword)");

        for (BienThePhuKien phuKien : phuKienList) {
            PhuKienBanHangTaiQuayDTO dto = convertPhuKienToDTO(phuKien);
            if (dto != null) {
                result.add(dto);
                System.out.println("‚úÖ Service: ƒê√£ th√™m ph·ª• ki·ªán: " + dto.getMaSKUPhuKien());
            }
        }

        System.out.println("‚úÖ Service: T·ªïng c·ªông t√¨m th·∫•y " + result.size() + " k·∫øt qu·∫£");
        return result;
    }

    // T√¨m ki·∫øm s·∫£n ph·∫©m theo m√£ SKU
    public List<SanPhamBanHangTaiQuayDTO> timKiemTheoMaSKU(String sku) {
        System.out.println("üîç Service: timKiemTheoMaSKU ƒë∆∞·ª£c g·ªçi v·ªõi SKU: " + sku);
        try {
            List<BienTheSanPham> bienTheList = bienTheSanPhamRepo.findByMaSKUContainingIgnoreCaseWithThuocTinh(sku);
            System.out.println("üîç Service: T√¨m th·∫•y " + bienTheList.size() + " s·∫£n ph·∫©m theo SKU v·ªõi JOIN FETCH: " + sku);

            List<SanPhamBanHangTaiQuayDTO> result = new ArrayList<>();
            for (BienTheSanPham product : bienTheList) {
                try {
                    System.out.println("üîç Service: SKU: " + product.getMaSKU() + ", S·ªë thu·ªôc t√≠nh: " + (product.getThuocTinhList() != null ? product.getThuocTinhList().size() : "null"));
                    SanPhamBanHangTaiQuayDTO dto = convertToDTO(product);
                    if (dto != null) {
                        result.add(dto);
                        System.out.println("‚úÖ Service: ƒê√£ th√™m s·∫£n ph·∫©m t·ª´ SKU v·ªõi thu·ªôc t√≠nh: '" + dto.getThuocTinh() + "'");
                    }
                } catch (Exception e) {
                    System.err.println("‚ùå Service: L·ªói convertToDTO cho SKU " + product.getMaSKU() + ": " + e.getMessage());
                }
            }

            System.out.println("‚úÖ Service: Tr·∫£ v·ªÅ " + result.size() + " DTO cho SKU: " + sku);
            return result;
        } catch (Exception e) {
            System.err.println("‚ùå Service: L·ªói trong timKiemTheoMaSKU: " + e.getMessage());
            e.printStackTrace();
            return new ArrayList<>();
        }
    }

    // T√¨m ki·∫øm s·∫£n ph·∫©m theo IMEI ho·∫∑c m√£ SKU
    public List<Object> timKiemTheoImeiHoacSKU(String keyword) {
        System.out.println("üîç Service: timKiemTheoImeiHoacSKU ƒë∆∞·ª£c g·ªçi v·ªõi keyword: " + keyword);
        List<Object> result = new ArrayList<>();

        try {
            // 1. T√¨m theo IMEI ch√≠nh x√°c (c·∫£ s·∫£n ph·∫©m v√† ph·ª• ki·ªán)
            var imeiEntity = imeiRepo.findByImei(keyword);
            if (imeiEntity.isPresent()) {
                System.out.println("üîç Service: T√¨m th·∫•y IMEI entity");
                IMEI imeiObj = imeiEntity.get();
                if (imeiObj.getBienTheSanPham() != null) {
                    System.out.println("üîç Service: T√¨m th·∫•y IMEI, SKU: " + imeiObj.getBienTheSanPham().getMaSKU());
                    // T√¨m l·∫°i BienTheSanPham v·ªõi ƒë·∫ßy ƒë·ªß thu·ªôc t√≠nh b·∫±ng JOIN FETCH
                    String sku = imeiObj.getBienTheSanPham().getMaSKU();
                    System.out.println("üîç Service: T√¨m thu·ªôc t√≠nh cho SKU: " + sku);

                    // Debug: Ki·ªÉm tra thu·ªôc t√≠nh tr·ª±c ti·∫øp t·ª´ database
                    List<Object[]> thuocTinhData = bienTheSanPhamRepo.findThuocTinhByMaSKU(sku);
                    System.out.println("üîç Service: Native query tr·∫£ v·ªÅ " + thuocTinhData.size() + " thu·ªôc t√≠nh");
                    for (Object[] row : thuocTinhData) {
                        System.out.println("üîç Service: Thu·ªôc t√≠nh t·ª´ DB: '" + row[0] + "' = '" + row[1] + "'");
                    }

                    var bienTheEntity = bienTheSanPhamRepo.findByMaSKUWithThuocTinh(sku);
                    if (bienTheEntity.isPresent()) {
                        BienTheSanPham bienThe = bienTheEntity.get();
                        System.out.println("üîç Service: Load BienTheSanPham v·ªõi JOIN FETCH cho SKU: " + bienThe.getMaSKU());
                        System.out.println("üîç Service: S·ªë thu·ªôc t√≠nh ƒë∆∞·ª£c load: " + (bienThe.getThuocTinhList() != null ? bienThe.getThuocTinhList().size() : "null"));

                        SanPhamBanHangTaiQuayDTO dto = convertToDTO(bienThe);
                        if (dto != null) {
                            result.add(dto);
                            System.out.println("‚úÖ Service: ƒê√£ th√™m s·∫£n ph·∫©m t·ª´ IMEI v·ªõi thu·ªôc t√≠nh: '" + dto.getThuocTinh() + "'");
                        }
                    } else {
                        System.out.println("‚ùå Service: Kh√¥ng t√¨m th·∫•y BienTheSanPham cho SKU: " + sku);
                    }
                } else if (imeiObj.getBienThePhuKien() != null) {
                    System.out.println("üîç Service: T√¨m th·∫•y IMEI ph·ª• ki·ªán, SKU: " + imeiObj.getBienThePhuKien().getMaSKUPhuKien());
                    // T√¨m l·∫°i BienThePhuKien v·ªõi ƒë·∫ßy ƒë·ªß thu·ªôc t√≠nh b·∫±ng JOIN FETCH
                    String skuPhuKien = imeiObj.getBienThePhuKien().getMaSKUPhuKien();
                    System.out.println("üîç Service: T√¨m thu·ªôc t√≠nh cho SKU ph·ª• ki·ªán: " + skuPhuKien);

                    var bienThePhuKienEntity = bienThePhuKienRepo.findByMaSKUPhuKienWithThuocTinh(skuPhuKien);
                    if (bienThePhuKienEntity.isPresent()) {
                        BienThePhuKien bienThePhuKien = bienThePhuKienEntity.get();
                        System.out.println("üîç Service: Load BienThePhuKien v·ªõi JOIN FETCH cho SKU: " + bienThePhuKien.getMaSKUPhuKien());
                        System.out.println("üîç Service: S·ªë thu·ªôc t√≠nh ph·ª• ki·ªán ƒë∆∞·ª£c load: " + (bienThePhuKien.getThuocTinhPhuKienList() != null ? bienThePhuKien.getThuocTinhPhuKienList().size() : "null"));

                        PhuKienBanHangTaiQuayDTO dto = convertPhuKienToDTO(bienThePhuKien);
                        if (dto != null) {
                            result.add(dto);
                            System.out.println("‚úÖ Service: ƒê√£ th√™m ph·ª• ki·ªán t·ª´ IMEI v·ªõi thu·ªôc t√≠nh: '" + dto.getThuocTinh() + "'");
                        }
                    } else {
                        System.out.println("‚ùå Service: Kh√¥ng t√¨m th·∫•y BienThePhuKien cho SKU: " + skuPhuKien);
                    }
                } else {
                    System.out.println("‚ùå Service: IMEI kh√¥ng c√≥ BienTheSanPham ho·∫∑c BienThePhuKien");
                }
            } else {
                System.out.println("üîç Service: Kh√¥ng t√¨m th·∫•y IMEI entity");
            }

            // 2. T√¨m theo SKU n·∫øu ch∆∞a c√≥ k·∫øt qu·∫£ ho·∫∑c keyword kh√¥ng ph·∫£i l√† IMEI
            System.out.println("üîç Service: Ki·ªÉm tra result.isEmpty(): " + result.isEmpty());
            if (result.isEmpty()) {
                System.out.println("üîç Service: T√¨m ki·∫øm theo SKU v√¨ result.isEmpty() = true");
                List<BienTheSanPham> productsBySku = bienTheSanPhamRepo.findByMaSKUContainingIgnoreCaseWithThuocTinh(keyword);
                System.out.println("üîç Service: T√¨m th·∫•y " + productsBySku.size() + " s·∫£n ph·∫©m theo SKU v·ªõi JOIN FETCH");

                for (BienTheSanPham product : productsBySku) {
                    try {
                        System.out.println("üîç Service: SKU: " + product.getMaSKU() + ", S·ªë thu·ªôc t√≠nh: " + (product.getThuocTinhList() != null ? product.getThuocTinhList().size() : "null"));
                        SanPhamBanHangTaiQuayDTO dto = convertToDTO(product);
                        if (dto != null) {
                            result.add(dto);
                            System.out.println("‚úÖ Service: ƒê√£ th√™m s·∫£n ph·∫©m t·ª´ SKU v·ªõi thu·ªôc t√≠nh: '" + dto.getThuocTinh() + "'");
                        }
                    } catch (Exception e) {
                        System.err.println("‚ùå Service: L·ªói convertToDTO cho SKU " + product.getMaSKU() + ": " + e.getMessage());
                    }
                }

                // T√¨m ki·∫øm ph·ª• ki·ªán theo SKU
                List<BienThePhuKien> phuKienBySku = bienThePhuKienRepo.findByMaSKUPhuKienContainingIgnoreCaseWithThuocTinh(keyword);
                System.out.println("üîç Service: T√¨m th·∫•y " + phuKienBySku.size() + " ph·ª• ki·ªán theo SKU v·ªõi JOIN FETCH");

                for (BienThePhuKien phuKien : phuKienBySku) {
                    try {
                        System.out.println("üîç Service: SKU ph·ª• ki·ªán: " + phuKien.getMaSKUPhuKien() + ", S·ªë thu·ªôc t√≠nh: " + (phuKien.getThuocTinhPhuKienList() != null ? phuKien.getThuocTinhPhuKienList().size() : "null"));
                        PhuKienBanHangTaiQuayDTO dto = convertPhuKienToDTO(phuKien);
                        if (dto != null) {
                            result.add(dto);
                            System.out.println("‚úÖ Service: ƒê√£ th√™m ph·ª• ki·ªán t·ª´ SKU v·ªõi thu·ªôc t√≠nh: '" + dto.getThuocTinh() + "'");
                        }
                    } catch (Exception e) {
                        System.err.println("‚ùå Service: L·ªói convertPhuKienToDTO cho SKU " + phuKien.getMaSKUPhuKien() + ": " + e.getMessage());
                    }
                }
            } else {
                System.out.println("üîç Service: B·ªè qua t√¨m ki·∫øm theo SKU v√¨ ƒë√£ c√≥ k·∫øt qu·∫£ t·ª´ IMEI");
            }

            System.out.println("‚úÖ Service: Tr·∫£ v·ªÅ " + result.size() + " k·∫øt qu·∫£");
            return result.stream().distinct().collect(Collectors.toList());
        } catch (Exception e) {
            System.err.println("‚ùå Service: L·ªói trong timKiemTheoImeiHoacSKU: " + e.getMessage());
            e.printStackTrace();
            return new ArrayList<>();
        }
    }


    // T√¨m ki·∫øm k·∫øt h·ª£p SKU + IMEI (h·ªó tr·ª£ c·∫£ s·∫£n ph·∫©m ch√≠nh v√† ph·ª• ki·ªán)
    public List<SanPhamBanHangTaiQuayDTO> timKiemKetHop(String sku, String imei) {
        System.out.println("=== B·∫ÆT ƒê·∫¶U T√åM KI·∫æM K·∫æT H·ª¢P ===");
        System.out.println("üîç T√¨m ki·∫øm k·∫øt h·ª£p v·ªõi SKU: '" + sku + "', IMEI: '" + imei + "'");

        sku = sku.trim();
        imei = imei.trim();

        // ‚úÖ S·ª¨A: T√¨m s·∫£n ph·∫©m ch√≠nh tr∆∞·ªõc
        List<SanPhamBanHangTaiQuayDTO> productsBySku = timKiemTheoMaSKU(sku);
        System.out.println("üì¶ S·∫£n ph·∫©m ch√≠nh t√¨m theo SKU: " + productsBySku.size());

        // ‚úÖ S·ª¨A: N·∫øu kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m ch√≠nh, t√¨m ph·ª• ki·ªán
        if (productsBySku.isEmpty()) {
            System.out.println("üîç Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m ch√≠nh, t√¨m ki·∫øm ph·ª• ki·ªán...");
            productsBySku = timKiemPhuKienTheoMaSKU(sku);
            System.out.println("üì¶ Ph·ª• ki·ªán t√¨m theo SKU: " + productsBySku.size());
        }

        if (productsBySku.isEmpty()) {
            System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m v·ªõi SKU: " + sku);
            return new ArrayList<>();
        }

        // L·ªçc theo IMEI (d√πng LIKE %imei%)
        List<SanPhamBanHangTaiQuayDTO> result = new ArrayList<>();
        for (SanPhamBanHangTaiQuayDTO product : productsBySku) {
            // ‚úÖ S·ª¨A: Ki·ªÉm tra IMEI cho c·∫£ s·∫£n ph·∫©m ch√≠nh v√† ph·ª• ki·ªán
            String productSku = product.getMaSKU();
            String phuKienSku = product.getMaSKUPhuKien();

            long count = 0;
            if (productSku != null) {
                // Ki·ªÉm tra s·∫£n ph·∫©m ch√≠nh
                count = imeiRepo.countBySkuAndImeiLike(productSku, imei);
                System.out.println("üîç Service: Ki·ªÉm tra IMEI cho s·∫£n ph·∫©m ch√≠nh " + productSku + ": " + count);
            }

            if (count == 0 && phuKienSku != null) {
                // Ki·ªÉm tra ph·ª• ki·ªán
                count = imeiRepo.countBySkuPhuKienAndImeiLike(phuKienSku, imei);
                System.out.println("üîç Service: Ki·ªÉm tra IMEI cho ph·ª• ki·ªán " + phuKienSku + ": " + count);
            }

            if (count > 0) {
                result.add(product);
                System.out.println("‚úÖ S·∫£n ph·∫©m c√≥ IMEI kh·ªõp: " + (productSku != null ? productSku : phuKienSku) + " (count: " + count + ")");
            }
        }

        System.out.println("üìä K·∫øt qu·∫£ k·∫øt h·ª£p: " + result.size() + " s·∫£n ph·∫©m");
        System.out.println("=== K·∫æT TH√öC T√åM KI·∫æM K·∫æT H·ª¢P ===");
        return result;
    }

    // T√¨m ki·∫øm ph·ª• ki·ªán theo SKU
    private List<SanPhamBanHangTaiQuayDTO> timKiemPhuKienTheoMaSKU(String sku) {
        System.out.println("üîç Service: timKiemPhuKienTheoMaSKU ƒë∆∞·ª£c g·ªçi v·ªõi SKU: " + sku);
        List<SanPhamBanHangTaiQuayDTO> result = new ArrayList<>();

        try {
            // T√¨m ph·ª• ki·ªán theo SKU
            List<BienThePhuKien> phuKienList = bienThePhuKienRepo.findByMaSKUPhuKienContainingIgnoreCaseWithThuocTinh(sku);
            System.out.println("üîç Service: T√¨m th·∫•y " + phuKienList.size() + " ph·ª• ki·ªán (ch·ª©a keyword)");

            for (BienThePhuKien bienThe : phuKienList) {
                // S·ª≠ d·ª•ng method ƒë√£ c√≥ ƒë·ªÉ convert th√†nh PhuKienBanHangTaiQuayDTO
                PhuKienBanHangTaiQuayDTO phuKienDTO = convertPhuKienToDTO(bienThe);
                if (phuKienDTO != null) {
                    // Chuy·ªÉn ƒë·ªïi PhuKienBanHangTaiQuayDTO th√†nh SanPhamBanHangTaiQuayDTO
                    SanPhamBanHangTaiQuayDTO dto = convertPhuKienToSanPhamDTO(phuKienDTO);
                    if (dto != null) {
                        result.add(dto);
                        System.out.println("‚úÖ Service: ƒê√£ th√™m ph·ª• ki·ªán: " + dto.getMaSKUPhuKien());
                    }
                }
            }

            System.out.println("‚úÖ Service: T·ªïng c·ªông t√¨m th·∫•y " + result.size() + " ph·ª• ki·ªán");
            return result;
        } catch (Exception e) {
            System.err.println("‚ùå Service: L·ªói trong timKiemPhuKienTheoMaSKU: " + e.getMessage());
            e.printStackTrace();
            return new ArrayList<>();
        }
    }

    // Chuy·ªÉn ƒë·ªïi PhuKienBanHangTaiQuayDTO sang SanPhamBanHangTaiQuayDTO
    private SanPhamBanHangTaiQuayDTO convertPhuKienToSanPhamDTO(PhuKienBanHangTaiQuayDTO phuKienDTO) {
        if (phuKienDTO == null) {
            return null;
        }

        try {
            SanPhamBanHangTaiQuayDTO dto = new SanPhamBanHangTaiQuayDTO();
            dto.setMaSKUPhuKien(phuKienDTO.getMaSKUPhuKien());
            dto.setTenPhuKien(phuKienDTO.getTenPhuKien());
            dto.setGia(phuKienDTO.getGia());
            dto.setSoLuong(phuKienDTO.getSoLuong());
            dto.setLoai("Ph·ª• ki·ªán");
            dto.setTrangThai(phuKienDTO.getTrangThai());
            dto.setThuocTinh(phuKienDTO.getThuocTinh());
            dto.setSoIMEI(phuKienDTO.getSoIMEI());

            System.out.println("‚úÖ Service: ƒê√£ convert PhuKienBanHangTaiQuayDTO th√†nh SanPhamBanHangTaiQuayDTO cho SKU: " + phuKienDTO.getMaSKUPhuKien());
            return dto;
        } catch (Exception e) {
            System.err.println("‚ùå Service: L·ªói trong convertPhuKienToSanPhamDTO: " + e.getMessage());
            e.printStackTrace();
            return null;
        }
    }

    // Chuy·ªÉn ƒë·ªïi BienTheSanPham sang SanPhamBanHangTaiQuayDTO
    private SanPhamBanHangTaiQuayDTO convertToDTO(BienTheSanPham bienThe) {
        System.out.println("üîç Service: convertToDTO cho SKU: " + (bienThe != null ? bienThe.getMaSKU() : "null"));
        if (bienThe == null) {
            System.out.println("‚ùå Service: bienThe is null");
            return null;
        }

        try {
            // Debug: Ki·ªÉm tra thu·ªôc t√≠nh c√≥ ƒë∆∞·ª£c load kh√¥ng
            System.out.println("üîç Service: S·ªë l∆∞·ª£ng thu·ªôc t√≠nh: " + (bienThe.getThuocTinhList() != null ? bienThe.getThuocTinhList().size() : "null"));
            if (bienThe.getThuocTinhList() != null && !bienThe.getThuocTinhList().isEmpty()) {
                System.out.println("üîç Service: Thu·ªôc t√≠nh ƒë·∫ßu ti√™n: " + bienThe.getThuocTinhList().get(0).getTenThuocTinh() + " = " + bienThe.getThuocTinhList().get(0).getTenThuocTinhBienThe());
                // Debug: In t·∫•t c·∫£ thu·ªôc t√≠nh
                for (int i = 0; i < bienThe.getThuocTinhList().size(); i++) {
                    var tt = bienThe.getThuocTinhList().get(i);
                    System.out.println("üîç Service: Thu·ªôc t√≠nh " + i + ": '" + tt.getTenThuocTinh() + "' = '" + tt.getTenThuocTinhBienThe() + "'");
                }
            } else {
                System.out.println("‚ùå Service: Kh√¥ng c√≥ thu·ªôc t√≠nh n√†o ƒë∆∞·ª£c load!");
            }

            // T·∫°o chu·ªói thu·ªôc t√≠nh theo format: "t√™n thu·ªôc t√≠nh: gi√° tr·ªã"
            String thuocTinhString = "";
            if (bienThe.getThuocTinhList() != null && !bienThe.getThuocTinhList().isEmpty()) {
                thuocTinhString = bienThe.getThuocTinhList().stream()
                        .map(tt -> {
                            String tenThuocTinh = tt.getTenThuocTinh() != null ? tt.getTenThuocTinh() : "";
                            String giaTri = tt.getTenThuocTinhBienThe() != null ? tt.getTenThuocTinhBienThe() : "";
                            return tenThuocTinh + ": " + giaTri;
                        })
                        .filter(s -> !s.trim().equals(":") && !s.trim().isEmpty())
                        .reduce((a, b) -> a + ", " + b)
                        .orElse("");
            } else {
                thuocTinhString = "N/A";
            }

            System.out.println("üîç Service: Chu·ªói thu·ªôc t√≠nh t·∫°o ƒë∆∞·ª£c: '" + thuocTinhString + "'");

            long soLuong = imeiRepo.countByBienTheSanPham_MaSKU(bienThe.getMaSKU());
            System.out.println("üîç Service: SKU " + bienThe.getMaSKU() + " c√≥ " + soLuong + " IMEI");

            SanPhamBanHangTaiQuayDTO dto = SanPhamBanHangTaiQuayDTO.builder()
                    .maSKU(bienThe.getMaSKU())
                    .tenSanPham(bienThe.getSanPham().getTenSanPham())
                    .gia(bienThe.getGia())
                    .thuocTinh(thuocTinhString)
                    .soLuong((int) soLuong)
                    .loai("S·∫£n ph·∫©m ch√≠nh")
                    .trangThai(bienThe.getTrangThai())
                    .build();

            System.out.println("‚úÖ Service: ƒê√£ convert DTO th√†nh c√¥ng cho SKU: " + dto.getMaSKU());
            return dto;
        } catch (Exception e) {
            System.err.println("‚ùå Service: L·ªói trong convertToDTO cho SKU " + bienThe.getMaSKU() + ": " + e.getMessage());
            e.printStackTrace();
            return null;
        }
    }

    // Convert BienThePhuKien to PhuKienBanHangTaiQuayDTO
    private PhuKienBanHangTaiQuayDTO convertPhuKienToDTO(BienThePhuKien bienThePhuKien) {
        try {
            System.out.println("üîç Service: Convert ph·ª• ki·ªán - SKU: " + bienThePhuKien.getMaSKUPhuKien());

            // Debug: Ki·ªÉm tra thu·ªôc t√≠nh ph·ª• ki·ªán
            System.out.println("üîç Service: S·ªë l∆∞·ª£ng thu·ªôc t√≠nh ph·ª• ki·ªán: " + (bienThePhuKien.getThuocTinhPhuKienList() != null ? bienThePhuKien.getThuocTinhPhuKienList().size() : "null"));
            if (bienThePhuKien.getThuocTinhPhuKienList() != null && !bienThePhuKien.getThuocTinhPhuKienList().isEmpty()) {
                System.out.println("üîç Service: Thu·ªôc t√≠nh ph·ª• ki·ªán ƒë·∫ßu ti√™n: " + bienThePhuKien.getThuocTinhPhuKienList().get(0).getTenThuocTinh() + " = " + bienThePhuKien.getThuocTinhPhuKienList().get(0).getGiaTriThuocTinh());
            }

            // T·∫°o chu·ªói thu·ªôc t√≠nh ph·ª• ki·ªán
            String thuocTinhString = "";
            if (bienThePhuKien.getThuocTinhPhuKienList() != null && !bienThePhuKien.getThuocTinhPhuKienList().isEmpty()) {
                thuocTinhString = bienThePhuKien.getThuocTinhPhuKienList().stream()
                        .map(tt -> {
                            String tenThuocTinh = tt.getTenThuocTinh() != null ? tt.getTenThuocTinh() : "";
                            String giaTri = tt.getGiaTriThuocTinh() != null ? tt.getGiaTriThuocTinh() : "";
                            return tenThuocTinh + ": " + giaTri;
                        })
                        .filter(s -> !s.trim().equals(":") && !s.trim().isEmpty())
                        .reduce((a, b) -> a + ", " + b)
                        .orElse("");
            } else {
                thuocTinhString = "N/A";
            }

            System.out.println("üîç Service: Chu·ªói thu·ªôc t√≠nh ph·ª• ki·ªán: '" + thuocTinhString + "'");

            // L·∫•y s·ªë l∆∞·ª£ng IMEI cho ph·ª• ki·ªán
            long soLuongImei = imeiRepo.countByBienThePhuKien_MaSKUPhuKien(bienThePhuKien.getMaSKUPhuKien());
            System.out.println("üîç Service: Ph·ª• ki·ªán " + bienThePhuKien.getMaSKUPhuKien() + " c√≥ " + soLuongImei + " IMEI");

            PhuKienBanHangTaiQuayDTO dto = PhuKienBanHangTaiQuayDTO.builder()
                    .maSKUPhuKien(bienThePhuKien.getMaSKUPhuKien())
                    .tenPhuKien(bienThePhuKien.getPhuKien().getTenPhuKien())
                    .gia(bienThePhuKien.getGia())
                    .thuocTinh(thuocTinhString)
                    .soLuong((int) soLuongImei)
                    .loai("Ph·ª• ki·ªán")
                    .trangThai(bienThePhuKien.getTrangThai())
                    .build();

            System.out.println("‚úÖ Service: ƒê√£ convert ph·ª• ki·ªán DTO th√†nh c√¥ng cho SKU: " + dto.getMaSKUPhuKien());
            return dto;
        } catch (Exception e) {
            System.err.println("‚ùå Service: L·ªói trong convertPhuKienToDTO cho SKU " + bienThePhuKien.getMaSKUPhuKien() + ": " + e.getMessage());
            e.printStackTrace();
            return null;
        }
    }
}
