package com.example.datn.BanHangTaiQuay.Controller;

import com.example.datn.BanHangTaiQuay.DTO.ImeiBanHangTaiQuayDTO;
import com.example.datn.BanHangTaiQuay.DTO.SanPhamBanHangTaiQuayDTO;
import com.example.datn.BanHangTaiQuay.Service.ImeiBanHangTaiQuayService;
import com.example.datn.BanHangTaiQuay.Service.SanPhamBanHangTaiQuayService;

import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/banhangtaiquay/sanpham")
@RequiredArgsConstructor
public class SanPhamBanHangTaiQuayController {

    private final SanPhamBanHangTaiQuayService sanPhamBanHangTaiQuayService;
    private final ImeiBanHangTaiQuayService imeiBanHangTaiQuayService;

    // Test endpoint
    @GetMapping("/test")
    public ResponseEntity<String> test() {
        return ResponseEntity.ok("SanPhamBanHangTaiQuayController ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng!");
    }

    // T√¨m ki·∫øm s·∫£n ph·∫©m (h·ªó tr·ª£ c·∫£ SKU v√† IMEI)
    @GetMapping("/search-sku")
    public ResponseEntity<List<Object>> searchSanPham(@RequestParam String keyword) {
        System.out.println("üîç Controller: searchSanPham ƒë∆∞·ª£c g·ªçi v·ªõi keyword: " + keyword);
        try {
            List<Object> sanPhamList = sanPhamBanHangTaiQuayService.timKiemTheoImeiHoacSKU(keyword);
            System.out.println("‚úÖ Controller: Tr·∫£ v·ªÅ " + (sanPhamList != null ? sanPhamList.size() : "null") + " s·∫£n ph·∫©m");
            return ResponseEntity.ok(sanPhamList);
        } catch (Exception e) {
            System.err.println("‚ùå Controller: L·ªói trong searchSanPham: " + e.getMessage());
            e.printStackTrace();
            return ResponseEntity.badRequest().body(null);
        }
    }

    // ‚úÖ M·ªöI: T√¨m ki·∫øm s·∫£n ph·∫©m CH·ªà theo SKU (kh√¥ng t√¨m IMEI)
    @GetMapping("/search-sku-only")
    public ResponseEntity<List<Object>> searchSanPhamBySKUOnly(@RequestParam String sku) {
        System.out.println("üîç Controller: searchSanPhamBySKUOnly ƒë∆∞·ª£c g·ªçi v·ªõi SKU: " + sku);
        try {
            List<Object> sanPhamList = sanPhamBanHangTaiQuayService.timKiemSanPhamVaPhuKien(sku);
            System.out.println("‚úÖ Controller: Tr·∫£ v·ªÅ " + (sanPhamList != null ? sanPhamList.size() : "null") + " s·∫£n ph·∫©m (ch·ªâ SKU)");
            if (sanPhamList != null && !sanPhamList.isEmpty()) {
                System.out.println("üîç Controller: Chi ti·∫øt k·∫øt qu·∫£:");
                for (int i = 0; i < sanPhamList.size(); i++) {
                    System.out.println("  - S·∫£n ph·∫©m " + (i+1) + ": " + sanPhamList.get(i));
                }
            } else {
                System.out.println("‚ùå Controller: Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m n√†o v·ªõi SKU: " + sku);
            }
            return ResponseEntity.ok(sanPhamList);
        } catch (Exception e) {
            System.err.println("‚ùå Controller: L·ªói trong searchSanPhamBySKUOnly: " + e.getMessage());
            e.printStackTrace();
            return ResponseEntity.badRequest().body(null);
        }
    }

    // T√¨m ki·∫øm c·∫£ s·∫£n ph·∫©m v√† ph·ª• ki·ªán
    @GetMapping("/search-all")
    public ResponseEntity<List<Object>> searchSanPhamVaPhuKien(@RequestParam String keyword) {
        System.out.println("üîç Controller: searchSanPhamVaPhuKien ƒë∆∞·ª£c g·ªçi v·ªõi keyword: " + keyword);
        try {
            List<Object> result = sanPhamBanHangTaiQuayService.timKiemSanPhamVaPhuKien(keyword);
            System.out.println("‚úÖ Controller: Tr·∫£ v·ªÅ " + result.size() + " k·∫øt qu·∫£ (s·∫£n ph·∫©m + ph·ª• ki·ªán)");
            return ResponseEntity.ok(result);
        } catch (Exception e) {
            System.err.println("‚ùå Controller: L·ªói trong searchSanPhamVaPhuKien: " + e.getMessage());
            e.printStackTrace();
            return ResponseEntity.badRequest().body(null);
        }
    }

    // T√¨m ki·∫øm k·∫øt h·ª£p SKU + IMEI
    @GetMapping("/search-combined")
    public ResponseEntity<List<SanPhamBanHangTaiQuayDTO>> searchCombined(
            @RequestParam String sku,
            @RequestParam String imei) {
        List<SanPhamBanHangTaiQuayDTO> sanPhamList = sanPhamBanHangTaiQuayService.timKiemKetHop(sku, imei);
        return ResponseEntity.ok(sanPhamList);
    }

    // L·∫•y list IMEI c·ªßa s·∫£n ph·∫©m theo m√£ SKU
    @GetMapping("/{maSKU}/imei")
    public ResponseEntity<List<ImeiBanHangTaiQuayDTO>> getImeiListBySku(@PathVariable String maSKU) {
        System.out.println("üîç Controller: API ƒë∆∞·ª£c g·ªçi v·ªõi SKU: " + maSKU);
        List<ImeiBanHangTaiQuayDTO> imeiList = imeiBanHangTaiQuayService.getImeiKhachDung(maSKU);
        System.out.println("üîç Controller: Tr·∫£ v·ªÅ " + (imeiList != null ? imeiList.size() : "null") + " IMEI items");
        return ResponseEntity.ok(imeiList);
    }

    // L·∫•y list IMEI c·ªßa s·∫£n ph·∫©m theo m√£ SKU v·ªõi filter IMEI
    @GetMapping("/{maSKU}/imei/search")
    public ResponseEntity<List<ImeiBanHangTaiQuayDTO>> getImeiListBySkuWithFilter(
            @PathVariable String maSKU,
            @RequestParam(required = false) String imei) {
        List<ImeiBanHangTaiQuayDTO> imeiList = imeiBanHangTaiQuayService.getImeiListBySkuMaBT(maSKU, imei);
        return ResponseEntity.ok(imeiList);
    }
}